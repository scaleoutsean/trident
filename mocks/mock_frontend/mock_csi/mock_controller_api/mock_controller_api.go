// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/netapp/trident/frontend/csi/controller_api (interfaces: TridentController)

// Package mock_controller_api is a generated GoMock package.
package mock_controller_api

import (
	context "context"
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	controllerAPI "github.com/netapp/trident/frontend/csi/controller_api"
	utils "github.com/netapp/trident/utils"
)

// MockTridentController is a mock of TridentController interface.
type MockTridentController struct {
	ctrl     *gomock.Controller
	recorder *MockTridentControllerMockRecorder
}

// MockTridentControllerMockRecorder is the mock recorder for MockTridentController.
type MockTridentControllerMockRecorder struct {
	mock *MockTridentController
}

// NewMockTridentController creates a new mock instance.
func NewMockTridentController(ctrl *gomock.Controller) *MockTridentController {
	mock := &MockTridentController{ctrl: ctrl}
	mock.recorder = &MockTridentControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTridentController) EXPECT() *MockTridentControllerMockRecorder {
	return m.recorder
}

// CreateNode mocks base method.
func (m *MockTridentController) CreateNode(arg0 context.Context, arg1 *utils.Node) (controllerAPI.CreateNodeResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateNode", arg0, arg1)
	ret0, _ := ret[0].(controllerAPI.CreateNodeResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateNode indicates an expected call of CreateNode.
func (mr *MockTridentControllerMockRecorder) CreateNode(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateNode", reflect.TypeOf((*MockTridentController)(nil).CreateNode), arg0, arg1)
}

// DeleteNode mocks base method.
func (m *MockTridentController) DeleteNode(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteNode", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteNode indicates an expected call of DeleteNode.
func (mr *MockTridentControllerMockRecorder) DeleteNode(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteNode", reflect.TypeOf((*MockTridentController)(nil).DeleteNode), arg0, arg1)
}

// GetChap mocks base method.
func (m *MockTridentController) GetChap(arg0 context.Context, arg1, arg2 string) (*utils.IscsiChapInfo, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetChap", arg0, arg1, arg2)
	ret0, _ := ret[0].(*utils.IscsiChapInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetChap indicates an expected call of GetChap.
func (mr *MockTridentControllerMockRecorder) GetChap(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetChap", reflect.TypeOf((*MockTridentController)(nil).GetChap), arg0, arg1, arg2)
}

// GetNodes mocks base method.
func (m *MockTridentController) GetNodes(arg0 context.Context) ([]string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetNodes", arg0)
	ret0, _ := ret[0].([]string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetNodes indicates an expected call of GetNodes.
func (mr *MockTridentControllerMockRecorder) GetNodes(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetNodes", reflect.TypeOf((*MockTridentController)(nil).GetNodes), arg0)
}

// InvokeAPI mocks base method.
func (m *MockTridentController) InvokeAPI(arg0 context.Context, arg1 []byte, arg2, arg3 string, arg4, arg5 bool) (*http.Response, []byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InvokeAPI", arg0, arg1, arg2, arg3, arg4, arg5)
	ret0, _ := ret[0].(*http.Response)
	ret1, _ := ret[1].([]byte)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// InvokeAPI indicates an expected call of InvokeAPI.
func (mr *MockTridentControllerMockRecorder) InvokeAPI(arg0, arg1, arg2, arg3, arg4, arg5 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InvokeAPI", reflect.TypeOf((*MockTridentController)(nil).InvokeAPI), arg0, arg1, arg2, arg3, arg4, arg5)
}

// UpdateVolumeLUKSPassphraseNames mocks base method.
func (m *MockTridentController) UpdateVolumeLUKSPassphraseNames(arg0 context.Context, arg1 string, arg2 []string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateVolumeLUKSPassphraseNames", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateVolumeLUKSPassphraseNames indicates an expected call of UpdateVolumeLUKSPassphraseNames.
func (mr *MockTridentControllerMockRecorder) UpdateVolumeLUKSPassphraseNames(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateVolumeLUKSPassphraseNames", reflect.TypeOf((*MockTridentController)(nil).UpdateVolumeLUKSPassphraseNames), arg0, arg1, arg2)
}

// UpdateVolumePublication mocks base method.
func (m *MockTridentController) UpdateVolumePublication(arg0 context.Context, arg1 *utils.VolumePublicationExternal) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateVolumePublication", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateVolumePublication indicates an expected call of UpdateVolumePublication.
func (mr *MockTridentControllerMockRecorder) UpdateVolumePublication(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateVolumePublication", reflect.TypeOf((*MockTridentController)(nil).UpdateVolumePublication), arg0, arg1)
}
